/******************************************************************************
 *
 * Module: Main Application
 *
 * File Name: main.c
 *
 * Description: Main application for Car Parking Sensor System
 *
 * Author: Your Name
 *
 *******************************************************************************/

#include "MCAL/GPIO/GPIO.h"
#include "HAL/LCD/LCD.h"
#include "HAL/BUZZER/BUZZER.h"
#include "HAL/LED/LED.h"
#include "HAL/Ultrasonic/Ultrasonic.h"
#include <util/delay.h>

/*******************************************************************************
 *                                Definitions                                  *
 *******************************************************************************/

/* Distance thresholds in centimeters */
#define STOP_DISTANCE           5
#define VERY_CLOSE_DISTANCE     10
#define CLOSE_DISTANCE          15
#define MEDIUM_DISTANCE         20

/* Delay between measurements in milliseconds */
#define MEASUREMENT_DELAY       500

/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

void ControlIndicators(uint16 distance);
void DisplayDistance(uint16 distance);

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

void ControlIndicators(uint16 distance)
{
    /* Turn off all LEDs and buzzer first */
    LED_off(RED_LED);
    LED_off(GREEN_LED);
    LED_off(BLUE_LED);
    Buzzer_off();

    if (distance <= STOP_DISTANCE && distance > 0)
    {
        /* Distance <= 5 cm: All LEDs flashing and buzzer ON */
        LED_on(RED_LED);
        LED_on(GREEN_LED);
        LED_on(BLUE_LED);
        Buzzer_on();
    }
    else if (distance <= VERY_CLOSE_DISTANCE)
    {
        /* 6-10 cm: All LEDs ON, no buzzer */
        LED_on(RED_LED);
        LED_on(GREEN_LED);
        LED_on(BLUE_LED);
    }
    else if (distance <= CLOSE_DISTANCE)
    {
        /* 11-15 cm: Red and Green LEDs ON, Blue OFF */
        LED_on(RED_LED);
        LED_on(GREEN_LED);
        LED_off(BLUE_LED);
    }
    else if (distance <= MEDIUM_DISTANCE)
    {
        /* 16-20 cm: Only Red LED ON */
        LED_on(RED_LED);
        LED_off(GREEN_LED);
        LED_off(BLUE_LED);
    }
    else if (distance > MEDIUM_DISTANCE)
    {
        /* >20 cm: All LEDs OFF, buzzer OFF */
        LED_off(RED_LED);
        LED_off(GREEN_LED);
        LED_off(BLUE_LED);
        Buzzer_off();
    }
    else
    {
        /* Distance = 0 or invalid - turn off everything */
        LED_off(RED_LED);
        LED_off(GREEN_LED);
        LED_off(BLUE_LED);
        Buzzer_off();
    }
}

void DisplayDistance(uint16 distance)
{
    /* Clear the LCD display */
    LCD_clearScreen();

    /* Move cursor to first line */
    LCD_moveCursur(0, 0);

    if (distance == 0)
    {
        LCD_displayString("No Signal");
    }
    else if (distance <= STOP_DISTANCE)
    {
        /* Display STOP warning for very close distance */
        LCD_displayString("STOP! Dist: ");
        LCD_itos(distance);
        LCD_displayString("cm");
    }
    else
    {
        /* Display normal distance measurement */
        LCD_displayString("Distance: ");
        LCD_itos(distance);
        LCD_displayString(" cm");
    }

    /* Display status on second line */
    LCD_moveCursur(1, 0);
    if (distance == 0)
    {
        LCD_displayString("CHECK SENSOR");
    }
    else if (distance <= STOP_DISTANCE)
    {
        LCD_displayString("TOO CLOSE!");
    }
    else if (distance <= VERY_CLOSE_DISTANCE)
    {
        LCD_displayString("VERY CLOSE");
    }
    else if (distance <= CLOSE_DISTANCE)
    {
        LCD_displayString("CLOSE");
    }
    else if (distance <= MEDIUM_DISTANCE)
    {
        LCD_displayString("MEDIUM");
    }
    else
    {
        LCD_displayString("SAFE");
    }
}

int main(void)
{
    uint16 distance = 0;
    uint8 error_count = 0;

    /* Initialize all drivers */
    LCD_init();             /* Initialize LCD display */
    Buzzer_init();          /* Initialize Buzzer */
    LEDS_init();            /* Initialize all LEDs */
    Ultrasonic_init();      /* Initialize Ultrasonic sensor */

    /* Display welcome message */
    LCD_clearScreen();
    LCD_moveCursur(0, 0);
    LCD_displayString("Car Parking");
    LCD_moveCursur(1, 0);
    LCD_displayString("Sensor System");
    _delay_ms(2000);

    /* Display initializing message */
    LCD_clearScreen();
    LCD_moveCursur(0, 0);
    LCD_displayString("Initializing...");
    _delay_ms(1000);

    /* Main application loop */
    while(1)
    {
        /* Read distance from ultrasonic sensor */
        distance = Ultrasonic_readDistance();

        /* Debug: Check if distance is reasonable */
        if (distance > 400)  /* HC-SR04 max range is 400cm */
        {
            error_count++;
            if (error_count > 3)
            {
                distance = 0;  /* Consider as error */
            }
        }
        else
        {
            error_count = 0;
        }

        /* Control LEDs and buzzer based on distance */
        ControlIndicators(distance);

        /* Display distance on LCD */
        DisplayDistance(distance);

        /* Wait before next measurement */
        _delay_ms(MEASUREMENT_DELAY);
    }

    return 0;
}
