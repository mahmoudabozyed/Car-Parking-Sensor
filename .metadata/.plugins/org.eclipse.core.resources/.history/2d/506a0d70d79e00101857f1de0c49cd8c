/******************************************************************************
 *
 * Module: Ultrasonic Sensor
 *
 * File Name: Ultrasonic.c
 *
 * Description: Source file for the HC-SR04 Ultrasonic Sensor driver
 *
 * Author: Mahmoud Abouzeid
 *
 *******************************************************************************/

#include "Ultrasonic.h"
#include "../../MCAL/ICU/ICU.h"
#include "../../MCAL/GPIO/GPIO.h"
#include <util/delay.h>

/*******************************************************************************
 *                           Global Variables                                  *
 *******************************************************************************/

/* Global variable to store the high time of the echo pulse */
static volatile uint16 g_echoHighTime = 0;

/* Global variable to count the edges detected */
static volatile uint8 g_edgeCount = 0;

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

/*
 * Description: Callback function called by ICU when edge is detected
 *              Calculates the high time of the echo pulse
 */
void Ultrasonic_edgeProcessing(void)
{
    g_edgeCount++;

    if(g_edgeCount == 1)
    {
        /* First rising edge - clear timer and change edge detection to falling */
        ICU_clearTimerValue();
        ICU_setEdgeDetectionType(FALLING);
    }
    else if(g_edgeCount == 2)
    {
        /* Falling edge - read the captured value and change edge detection back to rising */
        g_echoHighTime = ICU_getInputCaptureValue();
        ICU_setEdgeDetectionType(RAISING);
        g_edgeCount = 0; /* Reset edge count for next measurement */
    }
}

/*
 * Description: Initialize the ultrasonic sensor
 *              - Initialize ICU driver
 *              - Setup callback function
 *              - Configure trigger pin as output
 */
void Ultrasonic_init(void)
{
    /* Configure ICU with F_CPU/8 prescaler and rising edge detection */
    ICU_ConfigType ICU_Config = {F_CPU_8, RAISING};
    ICU_init(&ICU_Config);

    /* Set the callback function for edge processing */
    ICU_setCallBack(Ultrasonic_edgeProcessing);

    /* Setup trigger pin as output */
    GPIO_setupPinDirection(Ultrasonic_Trigger_PORT_ID, Ultrasonic_Trigger_PIN_ID, pin_output);

    /* Initialize global variables */
    g_echoHighTime = 0;
    g_edgeCount = 0;
}

/*
 * Description: Send trigger pulse to ultrasonic sensor
 *              - Send 10us high pulse to trigger pin
 */
void Ultrasonic_Trigger(void)
{
    /* Send high pulse for 10us */
    GPIO_writePin(Ultrasonic_Trigger_PORT_ID, Ultrasonic_Trigger_PIN_ID, HIGH);
    _delay_us(TRIGGER_DELAY);
    GPIO_writePin(Ultrasonic_Trigger_PORT_ID, Ultrasonic_Trigger_PIN_ID, LOW);
}

/*
 * Description: Read the distance measured by ultrasonic sensor in centimeters
 *              - Send trigger pulse
 *              - Wait for measurement to complete
 *              - Calculate distance based on echo high time
 * Returns: Distance in centimeters
 */
uint16 Ultrasonic_readDistance(void)
{
    uint16 distance = 0;

    /* Send trigger pulse to start measurement */
    Ultrasonic_Trigger();

    /* Wait for measurement to complete (until g_edgeCount is reset to 0) */
    while(g_edgeCount != 0);

    /* Calculate distance in centimeters */
    /*
     * Distance = (High Time * Speed of Sound) / 2
     * Speed of Sound = 34000 cm/s
     * Timer runs at F_CPU/8 = 16MHz/8 = 2MHz -> 0.5us per tick
     *
     * Distance = (g_echoHighTime * 0.5 * 10^-6 * 34000) / 2
     *          = (g_echoHighTime * 17) / 1000
     *          = g_echoHighTime / 58.8
     *
     * More precise calculation: g_echoHighTime / 58.8 â‰ˆ g_echoHighTime * 0.017
     */
    distance = (uint16)(g_echoHighTime * 17) / 1000;

    /* Alternative calculation using integer math for better performance */
    /* distance = g_echoHighTime * 17 / 1000; */

    return distance;
}
